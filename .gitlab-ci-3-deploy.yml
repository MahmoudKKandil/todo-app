# List of stages for jobs, and their order of execution
stages:
  - prechecks
  - dockerhub-login
  - containerize
  #- update-helm-chart

# Job:
validate-prechecks:
  stage: prechecks
  image: ubuntu:22.04 # Using Ubuntu instead of Alpine as the prechecks script is built for Bash.
  dependencies: []
  before_script:
    - 'set -euo pipefail'
    - 'date' # Current datetime
    - 'apt-get update; apt-get -y install git'
  script:
    - './.version_update_prechecks.sh'
  rules:
    - if: $CI_COMMIT_TAG

# Job:
aws-secrets-manager:
  stage: dockerhub-login
  image: junktext/alpine-aws-cli:alpine3.19.1_aws-cli2.13.25
  dependencies: []
  before_script:
    - 'set -euo pipefail'
    - 'date' # Current datetime
    #- 'echo "Current shell is: $SHELL"' # The $SHELL var is NOT available by default on Alpine. So, this shouldn't be used.
  script:
    # Note: The following env vars were defined in GitLab's UI (outside of this CI/CD pipeline) to ensure the AWS command will work:
    # $AWS_ACCESS_KEY_ID, $AWS_SECRET_ACCESS_KEY, and $AWS_DEFAULT_REGION
    # If, for whatever reason, we wanted to ensure one of those env vars were actually set correctly, do:
    #- 'echo "AWS_DEFAULT_REGION is: $AWS_DEFAULT_REGION"'
    #
    # To test logging into AWS and Docker Hub manually, below is a suggestion.
    #sudo echo -n $(aws secretsmanager get-secret-value --secret-id docker-hub-token-for-gitlab-cicd --profile gitlab-cicd --query SecretString --output text | cut -d: -f2 | tr -d \"}) | sudo docker login -u junktext --password-stdin
    - 'DTOKEN="$(aws secretsmanager get-secret-value --secret-id docker-hub-token-for-gitlab-cicd --query SecretString --output text | cut -d: -f2 | tr -d \"})"'
    - 'DAUTH="$(echo -n junktext:$DTOKEN | base64)"'
    # We are creating the recommended config file for Kaniko (that we rename later in the next job).
    - 'echo -e "{\n  \"auths\": {\n    \"https://index.docker.io/v1/\": {\n      \"auth\": \"$DAUTH\"\n    }\n  }\n}\n" > kaniko-config.json'
  artifacts:
    paths:
      - kaniko-config.json
    expire_in: 60 seconds
  rules:
    - if: $CI_COMMIT_TAG

# Job:
containerize-and-publish-img:
  stage: containerize
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  dependencies:
    - aws-secrets-manager
  before_script:
    - 'set -euo pipefail'
    - 'date' # Current datetime
    #- 'echo "Current shell is: $SHELL"' # The $SHELL var is NOT available with the Kaniko Executor. So, this shouldn't be used.
  script:
    # Renames `kaniko-config.json` from the previous job to `config.json` inside of /kaniko/.docker
    # The `config.json` allows us to login to Docker Hub through Kaniko.
    - 'mkdir -p /kaniko/.docker/'
    - 'cp kaniko-config.json /kaniko/.docker/config.json'
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "junktext/getting-started:${CI_COMMIT_TAG}"
      --destination "junktext/getting-started:latest"
  rules:
    - if: $CI_COMMIT_TAG
